version: "3.9"
services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ielts
      POSTGRES_USER: ielts
      POSTGRES_PASSWORD: ielts
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ielts -d ielts"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345
    command: server /data --console-address ":9001"
    ports: ["9000:9000","9001:9001"]
    volumes:
      - minio:/data
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 30

  minio-setup:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minio minio12345 &&
      mc mb -p local/assets || true &&
      mc anonymous set download local/assets &&
      echo 'MinIO bucket ready';
      "
    restart: "no"

  api:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.api
    environment:
      DATABASE_URL: postgresql+psycopg://ielts:ielts@postgres:5432/ielts
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: minio12345
      S3_BUCKET: assets
    ports: ["8000:8000"]
    depends_on:
      postgres:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully
      redis:
        condition: service_started
    volumes:
      - ./apps/api:/app

  web:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.web
    working_dir: /app
    volumes:
      - ./apps/web:/app
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:8000
      CHOKIDAR_USEPOLLING: "true"
    ports: ["3000:3000"]
    depends_on:
      - api

volumes:
  pgdata:
  minio:
